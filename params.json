{"name":"Libevent","body":"## Libevent\r\n\r\nC extension to [libevent](http://libevent.org/) library.\r\n\r\n## Description\r\n\r\nThe nice feature of libevent is it already contains build in HTTP server (evhttp).\r\n\r\nCurrently libevent extension implements mostly http server.\r\n\r\n## Dependencies\r\n\r\n* libevent v2\r\n\r\n## Documentation\r\n\r\nPlease read [libevent rubydoc](http://rubydoc.info/github/ayanko/libevent/frames)\r\n\r\n## Installation\r\n\r\n    gem install libevent\r\n\r\n## Using Libevent HTTP server\r\n\r\nCheck `samples` directory\r\n\r\n### From scratch\r\n\r\nSimple server\r\n\r\n    require \"libevent\" \r\n\r\n    # create event base\r\n    base = Libevent::Base.new\r\n\r\n    # create http server instance\r\n    http = Libevent::Http.new(base)\r\n\r\n    # bind socket\r\n    http.bind_socket(\"0.0.0.0\", 15015)\r\n\r\n    # set handler\r\n    http.handler do |request|\r\n      request.send_reply(200, {}, [\"Hello World\\n\"])\r\n    end\r\n\r\n    # catch SIGINT\r\n    base.trap_signal(\"INT\") { base.exit_loop }\r\n \r\n    # start libevent loop\r\n    base.dispatch\r\n\r\nCheck with curl\r\n\r\n    $ curl -v http://localhost:15015\r\n    > GET / HTTP/1.1\r\n    > User-Agent: curl/7.22.0 (x86_64-unknown-linux-gnu) libcurl/7.22.0 OpenSSL/1.0.0e zlib/1.2.5 libssh2/1.3.0\r\n    > Host: localhost:15015\r\n    > Accept: */*\r\n    > \r\n    < HTTP/1.1 200 OK\r\n    < Transfer-Encoding: chunked\r\n    < Date: Fri, 18 Nov 2011 19:09:04 GMT\r\n    < Content-Type: text/html; charset=ISO-8859-1\r\n    < \r\n    Hello World\r\n\r\n### Server with virtual hosts\r\n\r\n    require \"libevent\"\r\n\r\n    Libevent::Builder.new do\r\n\r\n      server \"0.0.0.0\", 3000 do |http|\r\n\r\n\thttp.handler do |request|\r\n\t  case request.get_uri_path\r\n\t  when '/hello'\r\n\t    request.send_reply 200, { 'Content->Type' => 'text/plain'},  [ \"Hello World\" ]\r\n\t  when '/api'\r\n\t    request.send_reply 200, { 'Content->Type' => 'application/json'},  [ \"{\\\"version\\\":\\\"1.0\\\"}\" ]\r\n\t  else\r\n\t    request.send_error 404, \"Nothing Found\"\r\n\t  end\r\n\tend\r\n\r\n\thttp.vhost \"blog.local\" do |host|\r\n\t  host.handler do |request|\r\n\t    request.send_reply 200, {}, [\"It's blog\"]\r\n\t  end\r\n\tend\r\n\r\n\thttp.vhost \"wiki.local\" do |host|\r\n\t  host.handler do |request|\r\n\t    request.send_reply 200, {}, [\"It's wiki\"]\r\n\t  end\r\n\tend\r\n\r\n\thttp.vhost \"*.local\" do |host|\r\n\t  host.handler do |request|\r\n\t    request.send_error 404, \"Please use blog.local or wiki.local\"\r\n\t  end\r\n\tend\r\n\r\n      end\r\n\r\n      server \"0.0.0.0\", 3001 do |http|\r\n\thttp.handler do |request|\r\n\t  request.send_reply 200, { 'Content->Type' => 'text/plain'},  [ \"Hello World 3001\" ]\r\n\tend\r\n      end\r\n\r\n      signal(\"INT\") do\r\n\tbase.exit_loop\r\n      end\r\n\r\n      signal(\"HUP\") do\r\n\tKernel.puts \"HUP received ...\"\r\n      end\r\n\r\n      dispatch\r\n\r\n    end\r\n\r\n### Serve Rails application\r\n\r\nAdd to `Gemfile`\r\n\r\n    gem \"libevent\", :require => false\r\n\r\nUpdate gems\r\n\r\n    $ bundle install\r\n\r\nRun application\r\n\r\n    $ script/rails s Libevent\r\n\r\nOr via rackup\r\n\r\n    $ bundle exec rackup -s Libevent -p 3000\r\n\r\n### Serve Rack application\r\n\r\nCheck rack handler `rack/handler/libevent.rb`\r\n\r\n\r\n## References\r\n\r\n* [libevent2 documentation](http://www.wangafu.net/~nickm/libevent-2.0/doxygen/html/index.html)\r\n* [libevent ruby binding documentation](http://rubydoc.info/github/ayanko/libevent/master/file/README.md)\r\n","tagline":"C extension to libevent library","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}